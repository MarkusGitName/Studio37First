@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using Studio37Media.Shared.ViewModels


@using System.IO
@using BlazorInputFile
@using System.IO.MemoryMappedFiles


@attribute [Authorize]
@inject HttpClient Http
<!--Create post Modal & Open Modal button-->
<div calss="conatiner my-4">
    <button class="btn btn-block font-weight-bold text-muted" data-toggle="modal" data-target="#selectPostType">
        <span class="oi oi-plus"></span>
        New Post
    </button>
</div>


<EditForm Model="@newPost" OnValidSubmit="@HandlePostFormSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="modal" id="selectPostType">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header border-0">
                    <h4 class="modal-title">Create a Post</h4>
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                </div>

                <div class="modal-body">

                    <div class="modal-body">
                        <div class="form-group">
                            <InputTextArea id="textPost" rows="5" class="form-control" placeholder="Write post..."
                                           @bind-Value="newPost.Text" />
                        </div>
                    </div>

                    <button type="button" class="btn btn-success w-25 mx-3" data-toggle="modal" data-target="#photoPostModal">Picture</button>
                    <button tupe="button" class="btn btn-warning w-25 mx-3" data-toggle="modal" data-target="#videoPostModal">Video Clip</button>

                    <button type="submit" class="btn btn-light btn-block">Upload</button>
                </div>

            </div>
 
        </div>
    </div>
</EditForm>

<Studio37Media.Client.Components.PhotoComponents.CreateNewPhotoComponent ReturnPhoto="AddPhoto"/>
<Studio37Media.Client.Components.VideoComponents.CreateNewVideoComponent ReturnVideo="AddVideo"/>




@code {

  


    //decleration of new Tutorial object
    Post newPost = new Post();

    // List Declerations to be added to the new tutorial object
    List<PostPhoto> ListOfPostPhotos = new List<PostPhoto>();
    List<PostVideo> ListOfPostVideos = new List<PostVideo>();

    //decleration of actual files to be uploaded
    MultipartFormDataContent PostPhotoContent = new MultipartFormDataContent();
    MultipartFormDataContent PostVideoContent = new MultipartFormDataContent();

    Guid PhotoId = new Guid();

    //This code runs on component load
    protected override async Task OnInitializedAsync()
    {
        newPost.id = Guid.NewGuid();
        Console.WriteLine("createPost component Load Started");

    }

    //This runs on form submit
    async void HandlePostFormSubmit()
    {
        //debuging
        Console.WriteLine("Videos added");
        //Add Videos
        newPost.PostVideos = ListOfPostVideos;

        Console.WriteLine("Videos added");
        //Fhotos Added
        newPost.PostPhotos = ListOfPostPhotos;

        // post to TutorialController
        newPost.Date = DateTime.Now;
        await Http.PostAsJsonAsync<Post>("Post/NewPost", newPost);
    }


 

    void AddPhoto(Photo incomingPhoto)
    {
        if(incomingPhoto != null)
        {
            //decleration of new Post
            PostPhoto newPostPhoto = new PostPhoto();

            //decleratio of new Post
            Photo newPhoto = new Photo();
            newPhoto.id = incomingPhoto.id;
            newPhoto.Path = incomingPhoto.Path;
            newPhoto.Caption = incomingPhoto.Caption;

            //setting new ID
            newPostPhoto.id = Guid.NewGuid();
            newPostPhoto.PhotoID = newPhoto.id ;
            newPostPhoto.PostID = newPost.id;
            
            newPostPhoto.Photo = newPhoto;
            
            
            // add new TutorialPost to Glabal List
            ListOfPostPhotos.Add(newPostPhoto);
        }
    }
    void AddVideo(Video incomingVideo)
    {
        if(incomingVideo != null)
        {
            //decleration of new Post
            PostVideo newPostVideo = new PostVideo();

            //decleratio of new Post
            Video newVideo = new Video();
            newVideo.id = incomingVideo.id;
            newVideo.Path = incomingVideo.Path;
            newVideo.Caption = incomingVideo.Caption;

            //setting new ID
            newPostVideo.id = Guid.NewGuid();
            newPostVideo.VideoID = newVideo.id ;
            newPostVideo.PostID = newPost.id;
            newPostVideo.Video = newVideo;
            
            
            // add new TutorialPost to Glabal List
            ListOfPostVideos.Add(newPostVideo);
        }
    }




}


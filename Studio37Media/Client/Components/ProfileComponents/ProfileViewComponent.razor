@page "/profile"
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using Studio37Media.Shared.ViewModels
@attribute [Authorize]
@inject HttpClient Http
<!-- Header info -->
<div class="container-fluid my-4">
    <div class="row">
        @if (profile == null)
        {
            <p>
                Loading...
            </p>
        }
        else
        {

            <div class="clearfix col-4">
                @try
                {
                    <img src="@profile.ProfilePhoto" class="img-fluid rounded-circle px-4 float-right" alt="Haha">
                }
                catch { }
            </div>
            <div class="col-4">
                <div class="row">
                    <h2><a class="nav-link text-dark px-5 pt-5 pb-3" href="#">followers</a>@profile.Profiles.Count</h2>
                    <h2><a class="nav-link text-dark px-5 pt-5 pb-3" href="#">following</a>@profile.Profile1.Count</h2>
                </div>
                <h4 class="pl-5">@profile.FirstName ,@profile.LastName</h4>
                <h6 class="pl-5">@profile.Bio.</h6>
                <h6 class="pl-5">@profile.Website</h6>

            </div>
            <div class="clearfix col-4">
                <button class="btn btn-outline-secondary mx-5 my-5 w-25" href="#">Edit Profile</button>
            </div>
        }

    </div>
</div>

<!-- Follow button -->
<div class="container-fluid py-4">
    <button class="btn btn-block btn-outline-danger ">Follow</button>
</div>
<div class="dropdown-divider"></div>


<TabControl>
    <TabPage Text="Timeline">
        <ProfileTimelineComponent />
    </TabPage>
    <TabPage Text="Tutorials">
        <ProfileTutorialsComponent />
    </TabPage>
    <TabPage Text="Workshops">
        <ProfileWorkshopsComponent />
    </TabPage>
</TabControl>




@code {
    private Profile profile;

    public string view = "TimeLine";


    protected override async Task OnInitializedAsync()
    {
        try
        {
            profile = await Http.GetFromJsonAsync<Profile>("Profile/GetProfileById/0");
            //await Http.PostAsJsonAsync();
            //<Profile>("Profile");
        }
        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        }
    }



}

@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using Studio37Media.Shared.ViewModels


@using System.IO
@using BlazorInputFile
@using System.IO.MemoryMappedFiles


@attribute [Authorize]
@inject HttpClient Http
<EditForm Model="@newClassVideo" OnValidSubmit="@HandleFormSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="conatiner col-4 py-3 mx-auto">
        <button class="btn btn-block font-weight-bold text-muted" data-toggle="modal" data-target="#selectVideoFile">
            <span class="oi oi-plus"></span>
            Select Video
        </button>
    </div>

    <div class="row col-11">
        <div class="container">
            <div class="form-group col-8 mx-auto">
                <InputText id="VideoTitle" class="form-control my-2" placeholder="Video Title"
                           @bind-Value="newClassVideo.Title" />
                <InputTextArea id="VideoDescription" class="form-control my-2" rows="5" placeholder="Video Description"
                               @bind-Value="newClassVideo.Description" />
                <InputNumber id="VideoCredits" class="form-control my-2" placeholder="Credits"
                             @bind-Value="newClassVideo.PriceCredits" />
                <textarea class="form-control my-2" rows="3" id="tags" placeholder="tags"></textarea>

                <div class="custom-file my-2" id="customFile4" lang="es">
                    <InputFile OnChange="VideoSelection" type="file" class="custom-file-input" id="thumbnailImage" aria-describedby="fileHelp" />
                        <label class="custom-file-label" for="thumbnailImage">
                            Upload Thumbnail...
                        </label>
                    </div>
                <div class="form-control my-2" placeholder="Video">
                    <InputFile OnChange="VideoSelection" />
                </div>
                <div class="form-control my-2" placeholder="Video">
                    <InputFile OnChange="ThumbnailSelection" />
                </div>
            </div>
            <button type="submit" class="btn btn-light btn-block">Save Changes</button>
        </div>

        @*//the uploaded video should be linked to this but i havent figured that out*@
        <div class="container col-3">
            <div class="card my-2">
                <div class="embed-responsive mx-0 my-0 embed-responsive-16by9">
                    <video src="@newClassVideo.VideoPath" controls></video>
                </div>
                <div class="card-footer">
                    <small><p class="text-muted">@newClassVideo.Title</p></small>
                    <p>@newClassVideo.Description</p>
                    <small><p class="text-muted">@VideoUploudStats</p></small>
                    <p>@newClassVideo.VideoPath</p>
                </div>
            </div>

        </div>

    </div>

   
</EditForm>

@code {

    string VideoUploudStats;
    string ThumbnailUploudStats;

    ClassVideo newClassVideo = new ClassVideo();


    // file contents declaration
    MultipartFormDataContent classVideoContent = new MultipartFormDataContent();
    MultipartFormDataContent ThumbnailContent = new MultipartFormDataContent();

    //This runs on form submit
    async void HandleFormSubmit()
    {

        // upload photos
        await Http.PostAsync("FileUpload", classVideoContent);
        await Http.PostAsync("FileUpload", classVideoContent);

        Console.WriteLine("Runs--------------------------------------------");
        newClassVideo.DateAdded = DateTime.Now;
        await Http.PostAsJsonAsync<ClassVideo>("ClassVideo/NewClassVideo", newClassVideo);
    }



    // This runs on profile Photo file selection
    async Task VideoSelection(IFileListEntry[] files)
    {
        var file = files.FirstOrDefault();
        if (file != null)
        {
            // Just load into .NET memory to show it can be done
            // Alternatively it could be saved to disk, or parsed in memory, or similar
            var ms = new MemoryStream();
            await file.Data.CopyToAsync(ms);

            VideoUploudStats = $"Finished loading {file.Size} bytes from {file.Name}";

            classVideoContent = new MultipartFormDataContent {
                    { new ByteArrayContent(ms.GetBuffer()), "uploads/ClassVideos", file.Name }
                };

            newClassVideo.VideoPath = "/uploads/ClassVideos/" + file.Name;

        }

    }
    // This runs on profile Photo file selection
    async Task ThumbnailSelection(IFileListEntry[] files)
    {
        var file = files.FirstOrDefault();
        if (file != null)
        {
            // Just load into .NET memory to show it can be done
            // Alternatively it could be saved to disk, or parsed in memory, or similar
            var ms = new MemoryStream();
            await file.Data.CopyToAsync(ms);

            ThumbnailUploudStats = $"Finished loading {file.Size} bytes from {file.Name}";

            ThumbnailContent = new MultipartFormDataContent {
                    { new ByteArrayContent(ms.GetBuffer()), "uploads/Thumbnails", file.Name }
                };

            newClassVideo.VideoThumbnail = "/uploads/Thumbnails/" + file.Name;

        }

    }
}

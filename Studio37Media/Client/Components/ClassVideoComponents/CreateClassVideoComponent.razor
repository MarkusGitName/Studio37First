@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using Studio37Media.Shared.ViewModels


@using System.IO
@using BlazorInputFile
@using System.IO.MemoryMappedFiles


@attribute [Authorize]
@inject HttpClient Http
<EditForm Model="@newClassVideo" OnValidSubmit="@HandleFormSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="conatiner col-4 py-3 mx-auto">
        <button class="btn btn-block font-weight-bold text-muted" data-toggle="modal" data-target="#selectVideoFile">
            <span class="oi oi-plus"></span>
            Select Video
        </button>
    </div>

    <div class="row col-11">
        <div class="container">
            <div class="form-group col-8 mx-auto">
                <InputText id="VideoTitle" class="form-control my-2" placeholder="Video Title"
                           @bind-Value="newClassVideo.Title" />
                <InputTextArea id="VideoDescription" class="form-control my-2" rows="5" placeholder="Video Description"
                               @bind-Value="newClassVideo.Description" />
                <InputNumber id="VideoCredits" class="form-control my-2" placeholder="Credits"
                             @bind-Value="newClassVideo.PriceCredits" />
                <textarea class="form-control my-2" rows="3" id="tags" placeholder="tags"></textarea>

                @*<div class="custom-file my-2" id="customFile4" lang="es">
                    <input type="file" class="custom-file-input" id="thumbnailImage" aria-describedby="fileHelp">
                    <label class="custom-file-label" for="thumbnailImage">
                        Upload Thumbnail...
                    </label>
                </div>*@
            <div>
                <label class="col-2 col-form-label">Select Video</label>
                <div class="btn btn-light" placeholder="Video">
                    <InputFile OnChange="VideoSelection" />
                </div>
            </div>
          
            <div>
                <label class="col-form-label col-2">Select Thumbnail</label>
                <div class="btn btn-light" placeholder="Video">
                    <InputFile OnChange="ThumbnailSelection" />
                </div>
            </div>
                
            </div>
            <button type="submit" class="btn btn-light btn-block my-2">Save Changes</button>
        </div>

        @*//the uploaded video should be linked to this but i havent figured that out*@
        <div class="container col-3">
            <div class="card my-2">
                <div class="embed-responsive mx-0 my-0 embed-responsive-16by9">
                    <video src="notgoodvodka.mp4" controls></video>
                </div>
                <div class="card-footer">
                    <small><p class="text-muted">video link</p></small>
                    <p>original ID of video uploaded/ video link</p>
                    <small><p class="text-muted">file name</p></small>
                    <p>Name of file uploaded</p>
                </div>
            </div>

        </div>

    </div>

    <!--<div class="modal" id="selectVideoFile">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Upload Video</h4>
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                </div>
                <div class="modal-body">
                    <div class="form-group">-->
                        @*<div class="custom-file my-2" id="customFile" lang="es">
                            <input type="file" class="custom-file-input" id="photoPost" aria-describedby="fileHelp">
                            <label class="custom-file-label" for="photoPost">
                                Select file...
                            </label>
                          
                        </div>*@
                        <!--<div class="form-control my-2" placeholder="Video">
                            <InputFile OnChange="VideoSelection" />
                        </div>
                    </div>
                    <button type="submit" class="btn btn-light btn-block" data-dismiss="modal">Upload</button>
                </div>
            </div>
        </div>
    </div>-->






    @*<div class="form-group row">
        <label for="VideoTitle" class="col-sm-1 col-form-label">Title</label>
        <div class="col-sm-5">
            <InputText id="VideoTitle" class="form-control" placeholder="Video Title"
                       @bind-Value="newClassVideo.Title" />
        </div>
    </div>
    <div class="form-group row">
        <label for="VideoDescription" class="col-sm-1 col-form-label">Description</label>
        <div class="col-sm-5">
            <InputTextArea id ="VideoDescription" class="form-control" placeholder="Video Description"
                           @bind-Value="newClassVideo.Description" />
        </div>
    </div>
    <div class="form-group row">
        <label for="VideoCredits" class="col-sm-1 col-form-label">Credits</label>
        <div class="col-sm-5">
            <InputNumber id="VideoCredits" class="form-control" placeholder="Credits"
                         @bind-Value="newClassVideo.PriceCredits" />
        </div>
    </div>

    <div class="form-group row">
        <label for="SelectVideo" class="col-sm-1 col-form-label">Add Video</label>
        <div class="col-sm-5">
            <InputFile OnChange="VideoSelection" />
        </div>
        <p>@VideoUploudStats</p>
    </div>
    <div class="form-group row">
        <label for="VideoThumbnail" class="col-sm-1 col-form-label">Thumbnail</label>
        <div class="col-sm-5">
            <InputFile OnChange="ThumbnailSelection" />
        </div>
        <p>@ThumbnailUploudStats</p>
    </div>

    <button class="class=" btn btn-primary"" type="submit">Submit</button>*@
</EditForm>

@code {

    string VideoUploudStats;
    string ThumbnailUploudStats;

    ClassVideo newClassVideo = new ClassVideo();


    // file contents declaration
    MultipartFormDataContent classVideoContent = new MultipartFormDataContent();
    MultipartFormDataContent ThumbnailContent = new MultipartFormDataContent();

    //This runs on form submit
    async void HandleFormSubmit()
    {
        
            // upload photos
            await Http.PostAsync("FileUpload", classVideoContent);
            await Http.PostAsync("FileUpload", classVideoContent);

        Console.WriteLine("Runs--------------------------------------------");
        newClassVideo.DateAdded = DateTime.Now;
        await Http.PostAsJsonAsync<ClassVideo>("ClassVideo/NewClassVideo", newClassVideo);
    }



    // This runs on profile Photo file selection
    async Task VideoSelection(IFileListEntry[] files)
    {
        var file = files.FirstOrDefault();
        if (file != null)
        {
            // Just load into .NET memory to show it can be done
            // Alternatively it could be saved to disk, or parsed in memory, or similar
            var ms = new MemoryStream();
            await file.Data.CopyToAsync(ms);

            VideoUploudStats = $"Finished loading {file.Size} bytes from {file.Name}";

            classVideoContent = new MultipartFormDataContent {
                    { new ByteArrayContent(ms.GetBuffer()), "uploads/ClassVideos", file.Name }
                };

            newClassVideo.VideoPath = "/uploads/ClassVideos/" + file.Name;

        }

    }
    // This runs on profile Photo file selection
    async Task ThumbnailSelection(IFileListEntry[] files)
    {
        var file = files.FirstOrDefault();
        if (file != null)
        {
            // Just load into .NET memory to show it can be done
            // Alternatively it could be saved to disk, or parsed in memory, or similar
            var ms = new MemoryStream();
            await file.Data.CopyToAsync(ms);

            ThumbnailUploudStats = $"Finished loading {file.Size} bytes from {file.Name}";

            ThumbnailContent = new MultipartFormDataContent {
                    { new ByteArrayContent(ms.GetBuffer()), "uploads/Thumbnails", file.Name }
                };

            newClassVideo.VideoThumbnail = "/uploads/Thumbnails/" + file.Name;

        }

    }
 }

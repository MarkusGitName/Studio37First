@page "/"


@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using Studio37Media.Shared.ViewModels

@using System.IO
@using BlazorInputFile
@using System.IO.MemoryMappedFiles


@attribute [Authorize]

@inject HttpClient Http


@*display for users without profile*@
@if (CurrentUser == null)
{
    <button href="/profile/create">Please Create a profile for the full Studio 37 experience</button>
}
else
{
    <hi href="/profile/create">Welcome @CurrentUser.FirstName</hi>


    @*Use this "if" staement to display something to profesional only*@
    @if (CurrentProfesional != null)
    {
        
    }

    @if (posts == null)
    {

        <p><em>Loading...</em></p>
    }
    else
    {
        foreach (Post post in posts)
        {
            <div class="container col-3">
                <div class="card my-2">
                    <div class="embed-responsive mx-0 my-0 embed-responsive-16by9">
                    </div>
                    <div>
                    </div>
                    <div class="card-footer">
                        <small><p class="text-muted">@post.Caption</p></small>
                        <p>@post.Text</p>
                        <small><p class="text-muted">@post.Caption</p></small>
                        <p></p>
                    </div>

                </div>

            </div>
        }
    }
}



@code{
    Profile CurrentUser = new Profile();
    ProfesionallsProfile CurrentProfesional = new ProfesionallsProfile();

    List<Post> posts = new List<Post>();


    protected override async Task OnInitializedAsync()
    {
        try
        {
            Console.WriteLine("Starts Try{}");

            //Load Current Users Profile
            CurrentUser = await Http.GetFromJsonAsync<Profile>("Profile/GetProfileById/0");
            

            
            Console.WriteLine("Successfull");
            
        }
        catch(Exception ex)
        {
            CurrentUser = null;
            Console.WriteLine("exception-----------"+ex.Message);
        }
        try
        {
            
            Console.WriteLine("Starts Try{}");
            //Load Current Users profesional Profile
            CurrentProfesional = await Http.GetFromJsonAsync<ProfesionallsProfile>("ProfessionalProfile/GetProfessionalProfileById/0");
            
            Console.WriteLine("Successfull");

        }
        catch(Exception ex)
        {
            CurrentProfesional = null;
            
            Console.WriteLine("exception-----------"+ex.Message);
        }

        try
        {
            posts = await Http.GetFromJsonAsync<List<Post>>("Post/GetPosts");

        }
        catch (Exception ex)
        {
            
            Console.WriteLine("exception-----------"+ex.Message);
        }
    }
}


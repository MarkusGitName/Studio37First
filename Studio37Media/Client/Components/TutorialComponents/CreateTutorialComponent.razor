@page "/Tutorial/CreateTutorial"

@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using Studio37Media.Shared.ViewModels

@using System.IO
@using BlazorInputFile
@using System.IO.MemoryMappedFiles

@attribute [Authorize]
@inject HttpClient client
@inject HttpClient Http
<h1>Create Profile</h1>
<hr />

@try
{
    <EditForm Model="@newTutorial" OnValidSubmit="@HandleFormSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group row">
            <label for="FirstName" class="col-sm-1 col-form-label">Workshop Title</label>
            <div class="col-sm-5">
                <InputText id="FirstName" class="form-control" placeholder="Workshop Title"
                           @bind-Value="newTutorial.Title" />
            </div>
        </div>

        <div class="form-group row">
            <label for="LastName" class="col-sm-1 col-form-label">Describsion </label>
            <div class="col-sm-5">
                <InputTextArea id="LastName" class="form-control" placeholder="Description"
                               @bind-Value="newTutorial.Desctription" />
            </div>
        </div>
        <div class="form-group  row">
            <label for="DateOfBirth" class="col-sm-1 col-form-label">Price in credits</label>
            <div class="col-sm-5">
                <InputNumber id="Credits" class="form-control"
                             min=0
                             @bind-Value="newTutorial.PriceCredits" />
            </div>
        </div>



        <div class="form-group row">
            <label for="ProfilePhoto" class="col-sm-1 col-form-label">Promo Videos</label>
            <div class="col-sm-5">
                <InputFile OnChange="PromoVideoSelection" />
            </div>
            @foreach (string filestat in ListOfPromoVideosStat)
            {
                <p>@filestat</p>
            }
        </div>




        <div class="form-group row">
            <label for="WallPhoto" class="col-sm-1 col-form-label">Promo Photos</label>
            <div class="col-sm-5">

                <InputFile OnChange="PromoPhotoSellection" />
            </div>
            @foreach (string filestat in ListOfPromoPhotosStats)
            {
                <p>@filestat</p>
            }
        </div>

        <button class="class=" btn btn-primary"" type="submit">Submit</button>
    </EditForm>

    @code {
        //Decleration of lists that display files upload status. To be removed or adjusted for users
        List<string> ListOfPromoVideosStat = new List<string>();
        List<string> ListOfPromoPhotosStats = new List<string>();

        // decleration of stats added to status lists
        string PromoVideoStats;
        string PromoPhotoStats;

        //decleration of new Tutorial object
        Tutorial newTutorial = new Tutorial();

        // List Declerations to be added to the new tutorial object
        List<TutorialPromoPhoto> ListOfTutorialPromoPhotos = new List<TutorialPromoPhoto>();
        List<TutorialPromoVideo> ListOfTutorialPromoVideos = new List<TutorialPromoVideo>();

        //decleration of actual files to be uploaded
        MultipartFormDataContent TutorialPromoVideoContent = new MultipartFormDataContent();
        MultipartFormDataContent TutorialPromoPhotoContent = new MultipartFormDataContent();

 
        // runs on pagte load
        protected override async Task OnInitializedAsync()
        {
            newTutorial.id = Guid.NewGuid();
        }

        // runs on form submit
        async void HandleFormSubmit()
        {
            
           //debuging
           Console.WriteLine("Videos added");
            //Add Videos
            newTutorial.TutorialPromoVideos = ListOfTutorialPromoVideos;
            
            Console.WriteLine("Videos added");
            //Fhotos Added
            newTutorial.TutorialPromoPhotoes = ListOfTutorialPromoPhotos;

            // post to TutorialController
            await Http.PostAsJsonAsync<Tutorial>("Tutorial/PostTutorial", newTutorial);

        }

        // runs on video file sellection
        async Task PromoVideoSelection(IFileListEntry[] files)
        {
            //incoming file
            var file = files.FirstOrDefault();
            if (file != null)
            {
                var ms = new MemoryStream();
                await file.Data.CopyToAsync(ms);

                TutorialPromoVideoContent = new MultipartFormDataContent {
                    { new ByteArrayContent(ms.GetBuffer()), "uploads/TutorialPromoVideo", file.Name }
                };
                
                //post call to fileUploadConstructer (endpoint)
                await client.PostAsync("FileUpload", TutorialPromoVideoContent);
                
                //display file upload stats
                PromoVideoStats = $"Finished loading {file.Size} bytes from {file.Name}";
                ListOfPromoVideosStat.Add(PromoVideoStats);

                //debugging
                Console.WriteLine("file upload complete");

                //decleration of new TutorialPromoVideo
                TutorialPromoVideo newTutorialPromoVideo = new TutorialPromoVideo();
                
                //setting new ID
                newTutorialPromoVideo.id = Guid.NewGuid();

                //decleratio of new promovideo
                PromoVideo newPromoVideo = new PromoVideo();
                newPromoVideo.id = Guid.NewGuid();
                newPromoVideo.VideoPath = "/uploads/TutorialPromoVideo/" + file.Name;

                
                //setting promovdeo value
                newTutorialPromoVideo.PromoVideo = newPromoVideo;


                // add new TutorialPromoVideo to Glabal List
                ListOfTutorialPromoVideos.Add(newTutorialPromoVideo);

                //debuging
                Console.WriteLine("photo added to list- "+ newTutorialPromoVideo);
            }

        }

        
        // runs on Photo file sellection
        async Task PromoPhotoSellection(IFileListEntry[] files)
        {
            var file = files.FirstOrDefault();

            if (file != null)
            {
                var ms = new MemoryStream();
                await file.Data.CopyToAsync(ms);

                TutorialPromoPhotoContent = new MultipartFormDataContent {
                    { new ByteArrayContent(ms.GetBuffer()), "uploads/TutorialPromoPhoto", file.Name }
                };

                
                //post call to fileUploadConstructer (endpoint)
                await client.PostAsync("FileUpload", TutorialPromoPhotoContent);

                
                //display file upload stats
                PromoPhotoStats = $"Finished loading {file.Size} bytes from {file.Name}";
                ListOfPromoPhotosStats.Add(PromoPhotoStats);


                //decleration of new TutorialPromoPhoto
                TutorialPromoPhoto newTutorialPromoPhoto = new TutorialPromoPhoto();

                //set id value
                newTutorialPromoPhoto.id =Guid.NewGuid();
                
                //decleratio of new newTutorialPromoPhoto
                PromoPhoto newPromoPhoto = new PromoPhoto();
                newPromoPhoto.id = Guid.NewGuid();
                newPromoPhoto.PhotoPath = "/uploads/TutorialPromoPhoto/" + file.Name;

                //Setitng new newTutorialPromoPhoto
                newTutorialPromoPhoto.PromoPhoto = newPromoPhoto;


                // add newTutorialPromoPhoto to glabal list
                ListOfTutorialPromoPhotos.Add(newTutorialPromoPhoto);
                
                //debugging
                Console.WriteLine("photo added to list- "+ newTutorialPromoPhoto);
            }

        }



    }
}
catch (Exception e)
{
    Console.WriteLine(e.ToString());
    <label for="firstName">@e.ToString() </label>
}